{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30775,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n#for dirname, _, filenames in os.walk('/kaggle/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-27T17:51:27.527841Z","iopub.execute_input":"2024-09-27T17:51:27.528522Z","iopub.status.idle":"2024-09-27T17:51:28.000482Z","shell.execute_reply.started":"2024-09-27T17:51:27.528472Z","shell.execute_reply":"2024-09-27T17:51:27.999278Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"code","source":"####################################linear equation Implementation###############################","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:28.002839Z","iopub.execute_input":"2024-09-27T17:51:28.003346Z","iopub.status.idle":"2024-09-27T17:51:28.008101Z","shell.execute_reply.started":"2024-09-27T17:51:28.003305Z","shell.execute_reply":"2024-09-27T17:51:28.006950Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"markdown","source":"Linear regression sudo code:\n1. define the value for x(features) and y(labels) of a set of train data\n2. compute the slope from this equation by compute the difference between two y s and two x s the divide as in this equation slope=(y2-y1)/(x2-x1)\n3.define random number as a bias number (b0)\n4. compute the y for the new from this equation y(new)=b0+(slope*x(new))\n","metadata":{}},{"cell_type":"code","source":"import random\n#1.  return random number between 0 and1 as coefficient or bias number\nb0=random.random()\nprint(b0)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:28.009443Z","iopub.execute_input":"2024-09-27T17:51:28.009776Z","iopub.status.idle":"2024-09-27T17:51:28.020035Z","shell.execute_reply.started":"2024-09-27T17:51:28.009738Z","shell.execute_reply":"2024-09-27T17:51:28.018901Z"},"trusted":true},"execution_count":17,"outputs":[{"name":"stdout","text":"0.38006009632560456\n","output_type":"stream"}]},{"cell_type":"code","source":"#2. give a constant values to x and y \nx=[0.23,0.27,0.30,0.34]\ny=[0.20,0.34,0.48,0.62]","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:28.021427Z","iopub.execute_input":"2024-09-27T17:51:28.021807Z","iopub.status.idle":"2024-09-27T17:51:28.035500Z","shell.execute_reply.started":"2024-09-27T17:51:28.021767Z","shell.execute_reply":"2024-09-27T17:51:28.034316Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"#Show the relationship between x and y\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nplt.scatter(x,y)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:28.038872Z","iopub.execute_input":"2024-09-27T17:51:28.039432Z","iopub.status.idle":"2024-09-27T17:51:28.298306Z","shell.execute_reply.started":"2024-09-27T17:51:28.039390Z","shell.execute_reply":"2024-09-27T17:51:28.297149Z"},"trusted":true},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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/S7kv81Ak4h1/KLTp09r8eLFuvXWWwftH9ZL1Dom+nVmQPzVXnymtrZWmzZt0muvvSafzydJ2r59u/70pz+publZKSkpxjMcGM63jpFIRJJ0yy236K677pIkFRYW6s0339S6det04403ms23vzrfOkqfxchbb72l5557TuPGjdPf//53LVq06JxoGerS09O1Y8cOnTx5Ug0NDaqqqtLll1+um266yXpqA0pv1/HMmTP64Q9/KOec1q5dazPZfuzL1jEZrzPESBJlZWUpNTVVra2t3ba3trYqJyfnS/dduXKlamtr9corr2jKlCnR7a+//rra2tp02WWXRbeFw2H9+te/1qpVq/TRRx/F9Rz6g0SsY1ZWloYNG6aCgoJu46+++mq98cYb8Zt8P5KIdfz000/129/+Vs8884xmz54tSZoyZYp27NihlStXDsoY6es6ejweTZo0SdJn4bt7927V1NTopptuiu7X2tqq3NzcbscsLCyM/0n0A4lYx7POhsiBAwf06quvDtqrIlJi1jEZrzO8TZNEaWlpKioqUkNDQ3RbJBJRQ0ODysrKetzvwQcf1H333af6+noVFxd3+9m8efP09ttva8eOHdFHXl6e7r77br300ksJOxdLiVjHtLQ0TZ8+XXv27Om2fe/evRo3blx8T6CfSMQ6njlzRmfOnJHH0/3/WlJTU6NXnwabvq7jF0UiEXV2dkqSJkyYoJycnG7HbG9v1z/+8Y+YjjmQJGIdpc9D5P3339crr7yiSy+9NK7z7m8SsY5JeZ2J20dh0SubNm1yXq/XPfHEE27Xrl3uZz/7mcvMzHTBYNA559y8efPckiVLouNra2tdWlqae/rpp11LS0v00dHR0eNzDIVv0yRiHbds2eKGDx/uHnvsMff++++71atXu9TUVPf6668n/fySJRHreOONN7prrrnGbdu2zX344YfuL3/5i/P5fO7Pf/5z0s8vWWJdx/vvv9+9/PLL7oMPPnC7du1yK1eudMOGDXPr16+PjqmtrXWZmZlu69at7u2333a33HLLkPhqbzzXsaury82dO9eNHTvW7dixo9vvbGdnp8k5JkMifh+/KN6vM8SIgdWrV7vLLrvMpaWluZKSEvfWW29Ff3bjjTe6+fPnR/89btw4J+mcR3V1dY/HHwox4lxi1vHxxx93kyZNcj6fz02dOtU9++yzSTobO/Fex5aWFnf77be7vLw85/P53JVXXukefvhhF4lEknhWyRfLOi5btiz6ezZy5EhXVlbmNm3a1O14kUjE3XPPPS47O9t5vV73ne98x+3ZsydZp2Mmnuu4f//+8/6+SnLbtm1L4lklX7x/H78o3q8zKc45F59rLAAAALHjMyMAAMAUMQIAAEwRIwAAwBQxAgAATBEjAADAFDECAABMESMAAMAUMQIAAEwRIwAAwBQxAgAATBEjAADAFDECAABM/X/SySSVcwA+/AAAAABJRU5ErkJggg=="},"metadata":{}}]},{"cell_type":"code","source":"#X_Y=list(zip(x,y))\n#print(X_Y)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:28.299835Z","iopub.execute_input":"2024-09-27T17:51:28.300321Z","iopub.status.idle":"2024-09-27T17:51:28.305383Z","shell.execute_reply.started":"2024-09-27T17:51:28.300267Z","shell.execute_reply":"2024-09-27T17:51:28.304177Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"code","source":"# we can convert two arrays into one dataframe \ndataset=pd.DataFrame({'x':x,'y':y}, columns=['x','y'])","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:28.307038Z","iopub.execute_input":"2024-09-27T17:51:28.307831Z","iopub.status.idle":"2024-09-27T17:51:28.319129Z","shell.execute_reply.started":"2024-09-27T17:51:28.307778Z","shell.execute_reply":"2024-09-27T17:51:28.317903Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"dataset","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:28.320645Z","iopub.execute_input":"2024-09-27T17:51:28.321108Z","iopub.status.idle":"2024-09-27T17:51:28.338992Z","shell.execute_reply.started":"2024-09-27T17:51:28.321053Z","shell.execute_reply":"2024-09-27T17:51:28.337643Z"},"trusted":true},"execution_count":22,"outputs":[{"execution_count":22,"output_type":"execute_result","data":{"text/plain":"      x     y\n0  0.23  0.20\n1  0.27  0.34\n2  0.30  0.48\n3  0.34  0.62","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>x</th>\n      <th>y</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.23</td>\n      <td>0.20</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.27</td>\n      <td>0.34</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.30</td>\n      <td>0.48</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.34</td>\n      <td>0.62</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"#visualize between two arrays variables\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_theme(style=\"darkgrid\")\nsns.relplot(data=dataset, x=\"x\", y=\"y\")# size=\"size\")\n","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:28.340548Z","iopub.execute_input":"2024-09-27T17:51:28.340957Z","iopub.status.idle":"2024-09-27T17:51:29.126113Z","shell.execute_reply.started":"2024-09-27T17:51:28.340917Z","shell.execute_reply":"2024-09-27T17:51:29.124985Z"},"trusted":true},"execution_count":23,"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"<seaborn.axisgrid.FacetGrid at 0x78bc4cc2e080>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 500x500 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# firstly we must reorder the values inside dataset","metadata":{}},{"cell_type":"code","source":"dataset[0:1]","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.127558Z","iopub.execute_input":"2024-09-27T17:51:29.128087Z","iopub.status.idle":"2024-09-27T17:51:29.139514Z","shell.execute_reply.started":"2024-09-27T17:51:29.128044Z","shell.execute_reply":"2024-09-27T17:51:29.138082Z"},"trusted":true},"execution_count":24,"outputs":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"      x    y\n0  0.23  0.2","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>x</th>\n      <th>y</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.23</td>\n      <td>0.2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"dataset['x'][0] # return first number in x column","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.141330Z","iopub.execute_input":"2024-09-27T17:51:29.141859Z","iopub.status.idle":"2024-09-27T17:51:29.151811Z","shell.execute_reply.started":"2024-09-27T17:51:29.141803Z","shell.execute_reply":"2024-09-27T17:51:29.150637Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"0.23"},"metadata":{}}]},{"cell_type":"code","source":"dataset['x'][1]# return second number in x column","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.153608Z","iopub.execute_input":"2024-09-27T17:51:29.154183Z","iopub.status.idle":"2024-09-27T17:51:29.164249Z","shell.execute_reply.started":"2024-09-27T17:51:29.154115Z","shell.execute_reply":"2024-09-27T17:51:29.162984Z"},"trusted":true},"execution_count":26,"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"0.27"},"metadata":{}}]},{"cell_type":"code","source":"dataset['y'][0]# return first number in y column","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.165789Z","iopub.execute_input":"2024-09-27T17:51:29.166268Z","iopub.status.idle":"2024-09-27T17:51:29.176531Z","shell.execute_reply.started":"2024-09-27T17:51:29.166203Z","shell.execute_reply":"2024-09-27T17:51:29.175296Z"},"trusted":true},"execution_count":27,"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"0.2"},"metadata":{}}]},{"cell_type":"code","source":"dataset['y'][1]## return second number in y column","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.182905Z","iopub.execute_input":"2024-09-27T17:51:29.183371Z","iopub.status.idle":"2024-09-27T17:51:29.191857Z","shell.execute_reply.started":"2024-09-27T17:51:29.183328Z","shell.execute_reply":"2024-09-27T17:51:29.190571Z"},"trusted":true},"execution_count":28,"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"0.34"},"metadata":{}}]},{"cell_type":"markdown","source":"#  For more details about the computation of slope visit this video: https://www.khanacademy.org/math/algebra/x2f8bb11595b61c86:forms-of-linear-equations/x2f8bb11595b61c86:intro-to-slope-intercept-form/v/slope-intercept-form#:~:text=Slope%2Dintercept%20form%20(y%3Dmx%2Bb)%20of,(b)%20of%20a%20line.","metadata":{}},{"cell_type":"code","source":"\n\n#slope=(y2-y1)/(x2-x1)\nslope=(dataset['y'][1]-dataset['y'][0])/(dataset['x'][1]-dataset['x'][0])","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.193197Z","iopub.execute_input":"2024-09-27T17:51:29.193630Z","iopub.status.idle":"2024-09-27T17:51:29.200462Z","shell.execute_reply.started":"2024-09-27T17:51:29.193587Z","shell.execute_reply":"2024-09-27T17:51:29.199229Z"},"trusted":true},"execution_count":29,"outputs":[]},{"cell_type":"code","source":"print(slope)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.202022Z","iopub.execute_input":"2024-09-27T17:51:29.202430Z","iopub.status.idle":"2024-09-27T17:51:29.211783Z","shell.execute_reply.started":"2024-09-27T17:51:29.202390Z","shell.execute_reply":"2024-09-27T17:51:29.210593Z"},"trusted":true},"execution_count":30,"outputs":[{"name":"stdout","text":"3.4999999999999996\n","output_type":"stream"}]},{"cell_type":"code","source":"def linear_equation2(b0,slope,x):\n    y=b0+(slope*x)\n    return y","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.213412Z","iopub.execute_input":"2024-09-27T17:51:29.213952Z","iopub.status.idle":"2024-09-27T17:51:29.221856Z","shell.execute_reply.started":"2024-09-27T17:51:29.213896Z","shell.execute_reply":"2024-09-27T17:51:29.220736Z"},"trusted":true},"execution_count":31,"outputs":[]},{"cell_type":"code","source":"#b1,x,y\n#def linear_equation(b0,b1,x):\n#    y=b0+(b1*x)\n#    return y","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.223248Z","iopub.execute_input":"2024-09-27T17:51:29.223643Z","iopub.status.idle":"2024-09-27T17:51:29.232540Z","shell.execute_reply.started":"2024-09-27T17:51:29.223605Z","shell.execute_reply":"2024-09-27T17:51:29.231382Z"},"trusted":true},"execution_count":32,"outputs":[]},{"cell_type":"code","source":"print(linear_equation2(b0,slope,0.768))","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.234026Z","iopub.execute_input":"2024-09-27T17:51:29.234566Z","iopub.status.idle":"2024-09-27T17:51:29.243038Z","shell.execute_reply.started":"2024-09-27T17:51:29.234500Z","shell.execute_reply":"2024-09-27T17:51:29.241835Z"},"trusted":true},"execution_count":33,"outputs":[{"name":"stdout","text":"3.0680600963256044\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# using new test value for x to compute the value of y","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"################################### Implementation of Linear Regression #############################","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.244572Z","iopub.execute_input":"2024-09-27T17:51:29.244960Z","iopub.status.idle":"2024-09-27T17:51:29.254242Z","shell.execute_reply.started":"2024-09-27T17:51:29.244919Z","shell.execute_reply":"2024-09-27T17:51:29.253167Z"},"trusted":true},"execution_count":34,"outputs":[]},{"cell_type":"markdown","source":"##########################################OR we can compute the value of coefficient using the next equations ( Not randomly)##########","metadata":{}},{"cell_type":"markdown","source":"# Linear regression \n![](http://)aims to establish a linear relationship between the input variables (features) and the output variable (target). The goal is to find the best-fitting line that minimizes the difference between predicted and actual values. Mathematically, this line can be represented as:\n\ny = wx + b ………………..(eq 1)\nwhere y ->dependent variable (output)\nx -> input or independent variable\nw ->weight or parameter vector of the approximation function (i.e slope in a simple linear equation) and \nb denotes the bias of the approximation function(y-intercept in a simple approximation) and is also known as the error term.","metadata":{}},{"cell_type":"markdown","source":"The linear regression model aims to find the optimal values for w and b that minimize the difference between the predicted values and the actual observations.","metadata":{}},{"cell_type":"markdown","source":"source: https://medium.com/@pritioli/implementing-linear-regression-from-scratch-747343634494","metadata":{}},{"cell_type":"code","source":"'''There are two ways to implement a Simple Linear Regression: \nOrdinary Least Squares (OLS) or Gradient Descent '''","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.255762Z","iopub.execute_input":"2024-09-27T17:51:29.256175Z","iopub.status.idle":"2024-09-27T17:51:29.266456Z","shell.execute_reply.started":"2024-09-27T17:51:29.256132Z","shell.execute_reply":"2024-09-27T17:51:29.265157Z"},"trusted":true},"execution_count":35,"outputs":[{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"'There are two ways to implement a Simple Linear Regression: \\nOrdinary Least Squares (OLS) or Gradient Descent '"},"metadata":{}}]},{"cell_type":"markdown","source":"**1.Ordinary Least Squares (OLS)**","metadata":{}},{"cell_type":"markdown","source":"yᵢ^  = w0 + w1*xᵢ+εᵢ……………eq(4)","metadata":{}},{"cell_type":"markdown","source":"![image.png](attachment:b754ebb6-2125-4a2e-bf7f-e728566ae42c.png)","metadata":{},"attachments":{"b754ebb6-2125-4a2e-bf7f-e728566ae42c.png":{"image/png":"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"}}},{"cell_type":"code","source":"X=dataset['x'].values\ny=dataset['y'].values\n","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.268274Z","iopub.execute_input":"2024-09-27T17:51:29.269251Z","iopub.status.idle":"2024-09-27T17:51:29.275037Z","shell.execute_reply.started":"2024-09-27T17:51:29.269149Z","shell.execute_reply":"2024-09-27T17:51:29.273886Z"},"trusted":true},"execution_count":36,"outputs":[]},{"cell_type":"code","source":"\"\"\"Write functions to compute the coefficients of OLS ( slope and intercept) \nby computing the covariance(numerator) and variance(denominator)\"\"\"","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.276566Z","iopub.execute_input":"2024-09-27T17:51:29.277385Z","iopub.status.idle":"2024-09-27T17:51:29.288631Z","shell.execute_reply.started":"2024-09-27T17:51:29.277343Z","shell.execute_reply":"2024-09-27T17:51:29.287426Z"},"trusted":true},"execution_count":37,"outputs":[{"execution_count":37,"output_type":"execute_result","data":{"text/plain":"'Write functions to compute the coefficients of OLS ( slope and intercept) \\nby computing the covariance(numerator) and variance(denominator)'"},"metadata":{}}]},{"cell_type":"code","source":"def compute_ols(X,y):\n    \n# compute the mean of our inputs and outputs\n    x_mean=np.mean(X)\n    y_mean=np.mean(y)\n# total number of values\n    n=len(X)\n\n# use this formula to calculte b0, b1 values\n\n    covariance=0#covariance(البسط)التباين المشترك\n    variance=0# المقامvariance\n    for i in range(n):\n        #numerator += (x[i] - x_mean) * (y[i] - y_mean)\n        #denominator += (x[i] - x_mean) ** 2\n\n        covariance=covariance+(X[i]-x_mean)*(y[i]-y_mean)\n        variance+=(X[i]-x_mean) **2\n    \n    b11= covariance/ variance#slope=covariance/variance\n    b00=y_mean -(b11*x_mean)#intercept b0=y-(slope* x)->y=bo*(slope*x)\n\n#print coefficents\n    return b11,b00\n    #print(b11,b00)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.290001Z","iopub.execute_input":"2024-09-27T17:51:29.290387Z","iopub.status.idle":"2024-09-27T17:51:29.299438Z","shell.execute_reply.started":"2024-09-27T17:51:29.290349Z","shell.execute_reply":"2024-09-27T17:51:29.298301Z"},"trusted":true},"execution_count":38,"outputs":[]},{"cell_type":"code","source":"# fuction to predict y\ndef predict(x, w1, w0):\n    return   w0+(w1 * x)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.300845Z","iopub.execute_input":"2024-09-27T17:51:29.301322Z","iopub.status.idle":"2024-09-27T17:51:29.314010Z","shell.execute_reply.started":"2024-09-27T17:51:29.301269Z","shell.execute_reply":"2024-09-27T17:51:29.312759Z"},"trusted":true},"execution_count":39,"outputs":[]},{"cell_type":"code","source":"# Add some random error to the array\ny[np.random.randint(0, len(y), size=10)] += np.random.randint(-5, 5)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.315598Z","iopub.execute_input":"2024-09-27T17:51:29.316089Z","iopub.status.idle":"2024-09-27T17:51:29.325117Z","shell.execute_reply.started":"2024-09-27T17:51:29.316032Z","shell.execute_reply":"2024-09-27T17:51:29.324041Z"},"trusted":true},"execution_count":40,"outputs":[]},{"cell_type":"code","source":"B1, B0 = compute_ols(X, y)\ny_hat = predict(X,B1,B0)\n# display the value of predicted coefficients\nprint(B1,B0)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.326851Z","iopub.execute_input":"2024-09-27T17:51:29.327843Z","iopub.status.idle":"2024-09-27T17:51:29.337035Z","shell.execute_reply.started":"2024-09-27T17:51:29.327797Z","shell.execute_reply":"2024-09-27T17:51:29.335889Z"},"trusted":true},"execution_count":41,"outputs":[{"name":"stdout","text":"-4.584615384615386 2.466615384615385\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# now we have bias (b0) and slope(b1)","metadata":{}},{"cell_type":"code","source":"# so ynew= b0 + (b1*Xnew)\n# compute the values for yhat: predictive\n\"\"\"Xnew=[.34,.43,.76]\nytest=x*\ny_hat=[]\nfor i in range(len(Xnew)):\n    \n    ynew= b00 + (b11*Xnew[i])\n    y_hat.append(ynew)\"\"\"\n#return y_hat   ","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.338562Z","iopub.execute_input":"2024-09-27T17:51:29.339066Z","iopub.status.idle":"2024-09-27T17:51:29.349842Z","shell.execute_reply.started":"2024-09-27T17:51:29.339009Z","shell.execute_reply":"2024-09-27T17:51:29.348682Z"},"trusted":true},"execution_count":42,"outputs":[{"execution_count":42,"output_type":"execute_result","data":{"text/plain":"'Xnew=[.34,.43,.76]\\nytest=x*\\ny_hat=[]\\nfor i in range(len(Xnew)):\\n    \\n    ynew= b00 + (b11*Xnew[i])\\n    y_hat.append(ynew)'"},"metadata":{}}]},{"cell_type":"code","source":"#y_hat","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.351270Z","iopub.execute_input":"2024-09-27T17:51:29.351751Z","iopub.status.idle":"2024-09-27T17:51:29.359735Z","shell.execute_reply.started":"2024-09-27T17:51:29.351699Z","shell.execute_reply":"2024-09-27T17:51:29.358500Z"},"trusted":true},"execution_count":43,"outputs":[]},{"cell_type":"markdown","source":"# 2.Gradient Descent :\na.Training\n * initial value to weight w=0\n * initial value to bias b=0\nb. Given a data points\n *predict result by y^=wx+b\n *calculate error\n *update parameters by using gradient descent & derivative of cost function\n *repeat n times\n \nc.Testing\n  *Given test data\n  *compute y^=wx+b\n ","metadata":{}},{"cell_type":"code","source":"X.shape","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.360973Z","iopub.execute_input":"2024-09-27T17:51:29.361390Z","iopub.status.idle":"2024-09-27T17:51:29.372897Z","shell.execute_reply.started":"2024-09-27T17:51:29.361349Z","shell.execute_reply":"2024-09-27T17:51:29.371489Z"},"trusted":true},"execution_count":44,"outputs":[{"execution_count":44,"output_type":"execute_result","data":{"text/plain":"(4,)"},"metadata":{}}]},{"cell_type":"code","source":"#np.zeros(4)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.374647Z","iopub.execute_input":"2024-09-27T17:51:29.375040Z","iopub.status.idle":"2024-09-27T17:51:29.381099Z","shell.execute_reply.started":"2024-09-27T17:51:29.374997Z","shell.execute_reply":"2024-09-27T17:51:29.379919Z"},"trusted":true},"execution_count":45,"outputs":[]},{"cell_type":"code","source":"\n\"\"\"b=0\ndef predict_y(X):\n    return w*X+b\nn=len(X)\nm=len(y)\nw=np.zeros(n)\n\ndef MSE(y,n,w,b):\n    for i in range(n):\n        #for j in range(m):\n            #ynew=w*x[i]+b\n            #for k in range\n        ynew=np.dot(x[i],w[i])+b\n        J+=(1/n)*(y[i]- ynew)**2\n    return J       \n    \"\"\"","metadata":{"execution":{"iopub.status.busy":"2024-09-27T17:51:29.382599Z","iopub.execute_input":"2024-09-27T17:51:29.382989Z","iopub.status.idle":"2024-09-27T17:51:29.393717Z","shell.execute_reply.started":"2024-09-27T17:51:29.382937Z","shell.execute_reply":"2024-09-27T17:51:29.392475Z"},"trusted":true},"execution_count":46,"outputs":[{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"'b=0\\ndef predict_y(X):\\n    return w*X+b\\nn=len(X)\\nm=len(y)\\nw=np.zeros(n)\\n\\ndef MSE(y,n,w,b):\\n    for i in range(n):\\n        #for j in range(m):\\n            #ynew=w*x[i]+b\\n            #for k in range\\n        ynew=np.dot(x[i],w[i])+b\\n        J+=(1/n)*(y[i]- ynew)**2\\n    return J       \\n    '"},"metadata":{}}]},{"cell_type":"code","source":"import numpy as np\nclass Linear_Reg:\n    def __init__(self, lr=0.001, n_iter=1500):\n        self.lr=lr#learning rate\n        self.n_iter=n_iter\n        self.b=None#initial bias \n        self.w=None# initial weights\n        \n    def Gredient_Descent(self,X,y):\n        self.b=0\n    # update w&b values by find the derivative for w&b based on cost or error function\n        #n_samples,n_features=X.shape\n        n_samples, n_features = X.shape\n        #define initial weights as array of zeros \n        self.w=np.zeros(n_features)\n        #self.lr=self.lr\n        \n        for i in range(self.n_iter):# 100: iteration number\n        #for j in range(m)\n        \"\"\"dot() method computes the dot product of two arrays\"\"\"\n            ynew=np.dot(X,self.w)+self.b\n        #dw=(1/n)*(2*x[i]*(ynew-y[i]))\n        #db=(1/n)*(2*(ynew-y[i]))\n        \n            dw=(1/n_samples)*np.dot(X.T,(ynew-y))\n            db=(1/n_samples)* np.sum(ynew-y)\n            self.w= self.w - self.lr* dw\n            self.b= self.b - self.lr* db\n    def predict(self,X):\n        y_pred=np.dot(X,self.w)+self.b\n        return y_pred","metadata":{"execution":{"iopub.status.busy":"2024-09-27T18:23:00.778696Z","iopub.execute_input":"2024-09-27T18:23:00.779150Z","iopub.status.idle":"2024-09-27T18:23:00.789967Z","shell.execute_reply.started":"2024-09-27T18:23:00.779107Z","shell.execute_reply":"2024-09-27T18:23:00.788922Z"},"trusted":true},"execution_count":99,"outputs":[]},{"cell_type":"code","source":"from sklearn import datasets\nfrom sklearn.model_selection import train_test_split\nX2,y2=datasets.make_regression(n_samples=100, n_features=1,noise=20,random_state=4)\nX_train,X_test,y_train,y_test=train_test_split(X2,y2, test_size=0.2, random_state=123)\n\n","metadata":{"execution":{"iopub.status.busy":"2024-09-27T18:23:04.049769Z","iopub.execute_input":"2024-09-27T18:23:04.050195Z","iopub.status.idle":"2024-09-27T18:23:04.059333Z","shell.execute_reply.started":"2024-09-27T18:23:04.050156Z","shell.execute_reply":"2024-09-27T18:23:04.057792Z"},"trusted":true},"execution_count":100,"outputs":[]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nplot = plt.figure(figsize=(8,6))\nplt.scatter(X2[:, 0], y2, color = \"b\", marker = \"o\", s = 30)\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-09-27T18:26:27.640096Z","iopub.execute_input":"2024-09-27T18:26:27.640547Z","iopub.status.idle":"2024-09-27T18:26:27.981103Z","shell.execute_reply.started":"2024-09-27T18:26:27.640506Z","shell.execute_reply":"2024-09-27T18:26:27.979904Z"},"trusted":true},"execution_count":108,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"reg= Linear_Reg(n_iter=2000)\nreg.Gredient_Descent(X_train,y_train)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T18:23:56.751338Z","iopub.execute_input":"2024-09-27T18:23:56.751776Z","iopub.status.idle":"2024-09-27T18:23:56.813027Z","shell.execute_reply.started":"2024-09-27T18:23:56.751736Z","shell.execute_reply":"2024-09-27T18:23:56.812025Z"},"trusted":true},"execution_count":104,"outputs":[]},{"cell_type":"code","source":"pred=reg.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T18:24:00.357920Z","iopub.execute_input":"2024-09-27T18:24:00.358376Z","iopub.status.idle":"2024-09-27T18:24:00.363399Z","shell.execute_reply.started":"2024-09-27T18:24:00.358332Z","shell.execute_reply":"2024-09-27T18:24:00.362205Z"},"trusted":true},"execution_count":105,"outputs":[]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\ndef mse(y_test, ypred):\n    return np.mean((y_test-pred)**2)\n\nmse = mse(y_test, pred)\nprint(mse)\n\ny_pred_line = reg.predict(X2)\ncmap = plt.get_cmap('viridis')\nfig = plt.figure(figsize=(8,6))\nm1 = plt.scatter(X_train, y_train, color=cmap(0.9), s=10)\nm2 = plt.scatter(X_test, y_test, color=cmap(0.5), s=10)\nplt.plot(X2, y_pred_line, color='black', linewidth=2, label='Prediction')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-27T18:24:04.514431Z","iopub.execute_input":"2024-09-27T18:24:04.514854Z","iopub.status.idle":"2024-09-27T18:24:04.873834Z","shell.execute_reply.started":"2024-09-27T18:24:04.514815Z","shell.execute_reply":"2024-09-27T18:24:04.872611Z"},"trusted":true},"execution_count":106,"outputs":[{"name":"stdout","text":"603.5082096586069\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}}]}]}